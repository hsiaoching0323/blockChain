{"ast":null,"code":"var _jsxFileName = \"/Users/judywang/Desktop/Truffle/client/src/page/Login/connect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport MetaMaskOnboarding from \"metamask-onboarding\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Connect() {\n  _s();\n\n  var _web3$givenProvider3;\n\n  const [{\n    metaMaskPresent,\n    metaMaskConnected\n  }, setMetaMaskObject] = useState({\n    metaMaskPresent: false,\n    metaMaskConnected: false\n  });\n  const [publicKey, setPublicKey] = useState(\"metamask not connected\");\n  const web3 = new Web3(Web3.givenProvider || \"http://localhost/7545\");\n\n  const connectMetaMask = async () => {\n    let accounts;\n\n    try {\n      var _web3$givenProvider;\n\n      await (web3 === null || web3 === void 0 ? void 0 : (_web3$givenProvider = web3.givenProvider) === null || _web3$givenProvider === void 0 ? void 0 : _web3$givenProvider.request({\n        method: \"eth_requestAccounts\"\n      }));\n      setMetaMaskObject({\n        metaMaskConnected: true,\n        metaMaskPresent\n      });\n      accounts = await web3.eth.getAccounts();\n      setPublicKey(() => accounts[0]);\n    } catch (error) {\n      console.error(\"metmask error\", error);\n    }\n  };\n\n  useEffect(() => {\n    const isMetaMaskPresent = () => {\n      var _web3$givenProvider2;\n\n      return web3 !== null && web3 !== void 0 && (_web3$givenProvider2 = web3.givenProvider) !== null && _web3$givenProvider2 !== void 0 && _web3$givenProvider2.isMetaMask ? true : false;\n    };\n\n    setMetaMaskObject(() => isMetaMaskPresent() ? {\n      metaMaskPresent: true,\n      metaMaskConnected\n    } : {\n      metaMaskPresent: false,\n      metaMaskConnected\n    });\n  }, [web3 === null || web3 === void 0 ? void 0 : (_web3$givenProvider3 = web3.givenProvider) === null || _web3$givenProvider3 === void 0 ? void 0 : _web3$givenProvider3.isMetaMask, metaMaskConnected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [metaMaskPresent && !metaMaskConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        connectMetaMask();\n      },\n      children: \"connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"address: \", publicKey]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Connect, \"mPxzkSZCgSKs2aZQ4e+LK95wJT8=\");\n\n_c = Connect;\nexport default Connect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"names":["React","useState","useEffect","Web3","MetaMaskOnboarding","Connect","metaMaskPresent","metaMaskConnected","setMetaMaskObject","publicKey","setPublicKey","web3","givenProvider","connectMetaMask","accounts","request","method","eth","getAccounts","error","console","isMetaMaskPresent","isMetaMask"],"sources":["/Users/judywang/Desktop/Truffle/client/src/page/Login/connect.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport MetaMaskOnboarding from \"metamask-onboarding\";\n\nfunction Connect() {\n  const [{ metaMaskPresent, metaMaskConnected }, setMetaMaskObject] = useState({\n    metaMaskPresent: false,\n    metaMaskConnected: false\n  });\n  const [publicKey, setPublicKey] = useState(\"metamask not connected\");\n  const web3 = new Web3(Web3.givenProvider || \"http://localhost/7545\");\n\n  const connectMetaMask = async () => {\n    let accounts;\n    try {\n      await web3?.givenProvider?.request({ method: \"eth_requestAccounts\" });\n      setMetaMaskObject({ metaMaskConnected: true, metaMaskPresent });\n      accounts = await web3.eth.getAccounts();\n      setPublicKey(() => accounts[0]);\n    } catch (error) {\n      console.error(\"metmask error\", error);\n    }\n  };\n\n  useEffect(() => {\n    const isMetaMaskPresent = () => {\n      return web3?.givenProvider?.isMetaMask ? true : false;\n    };\n    setMetaMaskObject(() =>\n      isMetaMaskPresent()\n        ? { metaMaskPresent: true, metaMaskConnected }\n        : { metaMaskPresent: false, metaMaskConnected }\n    );\n  }, [web3?.givenProvider?.isMetaMask, metaMaskConnected]);\n\n  return (\n    <div>\n      {metaMaskPresent && !metaMaskConnected && (\n        <button\n          onClick={() => {\n            connectMetaMask();\n          }}\n        >\n          connect MetaMask\n        </button>\n      )}\n      <h2 >address: {publicKey}</h2>\n    </div>\n  );\n}\n\nexport default Connect;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EAAA;;EACjB,MAAM,CAAC;IAAEC,eAAF;IAAmBC;EAAnB,CAAD,EAAyCC,iBAAzC,IAA8DP,QAAQ,CAAC;IAC3EK,eAAe,EAAE,KAD0D;IAE3EC,iBAAiB,EAAE;EAFwD,CAAD,CAA5E;EAIA,MAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,wBAAD,CAA1C;EACA,MAAMU,IAAI,GAAG,IAAIR,IAAJ,CAASA,IAAI,CAACS,aAAL,IAAsB,uBAA/B,CAAb;;EAEA,MAAMC,eAAe,GAAG,YAAY;IAClC,IAAIC,QAAJ;;IACA,IAAI;MAAA;;MACF,OAAMH,IAAN,aAAMA,IAAN,8CAAMA,IAAI,CAAEC,aAAZ,wDAAM,oBAAqBG,OAArB,CAA6B;QAAEC,MAAM,EAAE;MAAV,CAA7B,CAAN;MACAR,iBAAiB,CAAC;QAAED,iBAAiB,EAAE,IAArB;QAA2BD;MAA3B,CAAD,CAAjB;MACAQ,QAAQ,GAAG,MAAMH,IAAI,CAACM,GAAL,CAASC,WAAT,EAAjB;MACAR,YAAY,CAAC,MAAMI,QAAQ,CAAC,CAAD,CAAf,CAAZ;IACD,CALD,CAKE,OAAOK,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,eAAd,EAA+BA,KAA/B;IACD;EACF,CAVD;;EAYAjB,SAAS,CAAC,MAAM;IACd,MAAMmB,iBAAiB,GAAG,MAAM;MAAA;;MAC9B,OAAOV,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEC,aAAN,sEAAqBU,UAArB,GAAkC,IAAlC,GAAyC,KAAhD;IACD,CAFD;;IAGAd,iBAAiB,CAAC,MAChBa,iBAAiB,KACb;MAAEf,eAAe,EAAE,IAAnB;MAAyBC;IAAzB,CADa,GAEb;MAAED,eAAe,EAAE,KAAnB;MAA0BC;IAA1B,CAHW,CAAjB;EAKD,CATQ,EASN,CAACI,IAAD,aAACA,IAAD,+CAACA,IAAI,CAAEC,aAAP,yDAAC,qBAAqBU,UAAtB,EAAkCf,iBAAlC,CATM,CAAT;EAWA,oBACE;IAAA,WACGD,eAAe,IAAI,CAACC,iBAApB,iBACC;MACE,OAAO,EAAE,MAAM;QACbM,eAAe;MAChB,CAHH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAUE;MAAA,wBAAeJ,SAAf;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA7CQJ,O;;KAAAA,O;AA+CT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}