{"ast":null,"code":"import Utils from './utils.js';\nimport { ENGINE_MAP } from './constants.js';\n/*\n * More specific goes first\n */\n\nexport default [\n/* EdgeHTML */\n{\n  test(parser) {\n    return parser.getBrowserName(true) === 'microsoft edge';\n  },\n\n  describe(ua) {\n    const isBlinkBased = /\\sedg\\//i.test(ua); // return blink if it's blink-based one\n\n    if (isBlinkBased) {\n      return {\n        name: ENGINE_MAP.Blink\n      };\n    } // otherwise match the version and return EdgeHTML\n\n\n    const version = Utils.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n    return {\n      name: ENGINE_MAP.EdgeHTML,\n      version\n    };\n  }\n\n},\n/* Trident */\n{\n  test: [/trident/i],\n\n  describe(ua) {\n    const engine = {\n      name: ENGINE_MAP.Trident\n    };\n    const version = Utils.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n    if (version) {\n      engine.version = version;\n    }\n\n    return engine;\n  }\n\n},\n/* Presto */\n{\n  test(parser) {\n    return parser.test(/presto/i);\n  },\n\n  describe(ua) {\n    const engine = {\n      name: ENGINE_MAP.Presto\n    };\n    const version = Utils.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n    if (version) {\n      engine.version = version;\n    }\n\n    return engine;\n  }\n\n},\n/* Gecko */\n{\n  test(parser) {\n    const isGecko = parser.test(/gecko/i);\n    const likeGecko = parser.test(/like gecko/i);\n    return isGecko && !likeGecko;\n  },\n\n  describe(ua) {\n    const engine = {\n      name: ENGINE_MAP.Gecko\n    };\n    const version = Utils.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n    if (version) {\n      engine.version = version;\n    }\n\n    return engine;\n  }\n\n},\n/* Blink */\n{\n  test: [/(apple)?webkit\\/537\\.36/i],\n\n  describe() {\n    return {\n      name: ENGINE_MAP.Blink\n    };\n  }\n\n},\n/* WebKit */\n{\n  test: [/(apple)?webkit/i],\n\n  describe(ua) {\n    const engine = {\n      name: ENGINE_MAP.WebKit\n    };\n    const version = Utils.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n    if (version) {\n      engine.version = version;\n    }\n\n    return engine;\n  }\n\n}];","map":{"version":3,"names":["Utils","ENGINE_MAP","test","parser","getBrowserName","describe","ua","isBlinkBased","name","Blink","version","getFirstMatch","EdgeHTML","engine","Trident","Presto","isGecko","likeGecko","Gecko","WebKit"],"sources":["/Users/judywang/Desktop/Truffle/client/node_modules/bowser/src/parser-engines.js"],"sourcesContent":["import Utils from './utils.js';\nimport { ENGINE_MAP } from './constants.js';\n\n/*\n * More specific goes first\n */\nexport default [\n  /* EdgeHTML */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'microsoft edge';\n    },\n    describe(ua) {\n      const isBlinkBased = /\\sedg\\//i.test(ua);\n\n      // return blink if it's blink-based one\n      if (isBlinkBased) {\n        return {\n          name: ENGINE_MAP.Blink,\n        };\n      }\n\n      // otherwise match the version and return EdgeHTML\n      const version = Utils.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      return {\n        name: ENGINE_MAP.EdgeHTML,\n        version,\n      };\n    },\n  },\n\n  /* Trident */\n  {\n    test: [/trident/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Trident,\n      };\n\n      const version = Utils.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Presto */\n  {\n    test(parser) {\n      return parser.test(/presto/i);\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Presto,\n      };\n\n      const version = Utils.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Gecko */\n  {\n    test(parser) {\n      const isGecko = parser.test(/gecko/i);\n      const likeGecko = parser.test(/like gecko/i);\n      return isGecko && !likeGecko;\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Gecko,\n      };\n\n      const version = Utils.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Blink */\n  {\n    test: [/(apple)?webkit\\/537\\.36/i],\n    describe() {\n      return {\n        name: ENGINE_MAP.Blink,\n      };\n    },\n  },\n\n  /* WebKit */\n  {\n    test: [/(apple)?webkit/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.WebKit,\n      };\n\n      const version = Utils.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}