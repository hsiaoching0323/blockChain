{"ast":null,"code":"var _jsxFileName = \"/Users/judywang/Desktop/truffle/client/src/page/index.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  // usetstate for storing and retrieving wallet details\n  const [data, setdata] = useState({\n    address: \"\",\n    Balance: null\n  }); // Button handler button for handling a\n  // request event for metamask\n\n  const btnhandler = () => {\n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n      // res[0] for fetching a first wallet\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(res => accountChangeHandler(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  }; // getbalance function for getting a balance in\n  // a right format with help of ethers\n\n\n  const getbalance = address => {\n    // Requesting balance method\n    window.ethereum.request({\n      method: \"eth_getBalance\",\n      params: [address, \"latest\"]\n    }).then(balance => {\n      // Setting balance\n      setdata({\n        Balance: ethers.utils.formatEther(balance)\n      });\n    });\n  }; // Function for getting handling all events\n\n\n  const accountChangeHandler = account => {\n    // Setting an address data\n    setdata({\n      address: account\n    });\n    data.address = account; // Setting a balance\n\n    getbalance(account);\n    console.log(data.address);\n    var account = data.address;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: btnhandler,\n        variant: \"primary\",\n        children: \"Connect to wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"balance:\", data.Balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"6emK6WaiuRaD3xNKM4bjT5SMaWU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","Paper","Stack","Typography","ethers","React","useEffect","useState","Login","data","setdata","address","Balance","btnhandler","window","ethereum","request","method","then","res","accountChangeHandler","alert","getbalance","params","balance","utils","formatEther","account","console","log"],"sources":["/Users/judywang/Desktop/truffle/client/src/page/index.js"],"sourcesContent":["import { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\n\n\nfunction Login() {\n  \n    // usetstate for storing and retrieving wallet details\n    const [data, setdata] = useState({\n      address: \"\",\n      Balance: null,\n    });\n    \n    // Button handler button for handling a\n    // request event for metamask\n    const btnhandler = () => {\n    \n      // Asking if metamask is already present or not\n      if (window.ethereum) {\n    \n        // res[0] for fetching a first wallet\n        window.ethereum\n          .request({ method: \"eth_requestAccounts\" })\n          .then((res) => accountChangeHandler(res[0]));\n      } else {\n        alert(\"install metamask extension!!\");\n      }\n    };\n    \n    // getbalance function for getting a balance in\n    // a right format with help of ethers\n    const getbalance = (address) => {\n      // Requesting balance method\n      window.ethereum\n        .request({ \n          method: \"eth_getBalance\", \n          params: [address, \"latest\"] \n        })\n        .then((balance) => {\n          // Setting balance\n          setdata({\n            Balance: ethers.utils.formatEther(balance),\n          });\n        });\n    };\n    \n    // Function for getting handling all events\n    const accountChangeHandler = (account) => {\n      // Setting an address data\n      setdata({\n        address: account,\n      });\n      data.address = account;\n      // Setting a balance\n      getbalance(account);\n      console.log(data.address);\n      var account = data.address;\n    };\n  \n    return (\n      <div className=\"Login\">\n        {/* Calling all values which we \n         have stored in usestate */}\n        <div className=\"text-center\">\n            <Button onClick={btnhandler} variant=\"primary\">\n              Connect to wallet\n            </Button>\n        </div>\n        <div>\n            {/* address:{data.address} */}\n        </div>\n        <div>\n            balance:{data.Balance}\n        </div>\n      </div>\n    );\n  }\n    \n  export default Login;"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,SAASC,KAAT,GAAiB;EAAA;;EAEb;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC;IAC/BI,OAAO,EAAE,EADsB;IAE/BC,OAAO,EAAE;EAFsB,CAAD,CAAhC,CAHa,CAQb;EACA;;EACA,MAAMC,UAAU,GAAG,MAAM;IAEvB;IACA,IAAIC,MAAM,CAACC,QAAX,EAAqB;MAEnB;MACAD,MAAM,CAACC,QAAP,CACGC,OADH,CACW;QAAEC,MAAM,EAAE;MAAV,CADX,EAEGC,IAFH,CAESC,GAAD,IAASC,oBAAoB,CAACD,GAAG,CAAC,CAAD,CAAJ,CAFrC;IAGD,CAND,MAMO;MACLE,KAAK,CAAC,8BAAD,CAAL;IACD;EACF,CAZD,CAVa,CAwBb;EACA;;;EACA,MAAMC,UAAU,GAAIX,OAAD,IAAa;IAC9B;IACAG,MAAM,CAACC,QAAP,CACGC,OADH,CACW;MACPC,MAAM,EAAE,gBADD;MAEPM,MAAM,EAAE,CAACZ,OAAD,EAAU,QAAV;IAFD,CADX,EAKGO,IALH,CAKSM,OAAD,IAAa;MACjB;MACAd,OAAO,CAAC;QACNE,OAAO,EAAER,MAAM,CAACqB,KAAP,CAAaC,WAAb,CAAyBF,OAAzB;MADH,CAAD,CAAP;IAGD,CAVH;EAWD,CAbD,CA1Ba,CAyCb;;;EACA,MAAMJ,oBAAoB,GAAIO,OAAD,IAAa;IACxC;IACAjB,OAAO,CAAC;MACNC,OAAO,EAAEgB;IADH,CAAD,CAAP;IAGAlB,IAAI,CAACE,OAAL,GAAegB,OAAf,CALwC,CAMxC;;IACAL,UAAU,CAACK,OAAD,CAAV;IACAC,OAAO,CAACC,GAAR,CAAYpB,IAAI,CAACE,OAAjB;IACA,IAAIgB,OAAO,GAAGlB,IAAI,CAACE,OAAnB;EACD,CAVD;;EAYA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,wBAGE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACI,QAAC,MAAD;QAAQ,OAAO,EAAEE,UAAjB;QAA6B,OAAO,EAAC,SAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHF,eAQE;MAAA;MAAA;MAAA;IAAA,QARF,eAWE;MAAA,uBACaJ,IAAI,CAACG,OADlB;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAvEMJ,K;;KAAAA,K;AAyEP,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}